# Pre-commit hooks configuration
# Run 'pre-commit install' to install the hooks
repos:
  # Ruff for fast Python linting and formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi]
      - id: ruff-format
        types_or: [python, pyi]

  # Black for Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        types: [python]

  # isort for import sorting (handled by ruff, but keeping as backup)
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]

  # mypy for static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-redis, types-requests]
        args: [--ignore-missing-imports]
        exclude: ^(tests/|scripts/)

  # Bandit for security linting
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-c", ".bandit"]
        exclude: ^tests/

  # Built-in pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^.*\.(md|rst)$
      - id: end-of-file-fixer
        exclude: ^.*\.(md|rst)$
      - id: check-yaml
        exclude: ^config/
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-docstring-first
      - id: check-ast
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]
      - id: requirements-txt-fixer
      - id: check-added-large-files
        args: [--maxkb=1000]

  # Security and secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(.*\.lock|.*requirements.*\.txt)$

  # Shell scripts linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  # Docker linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-d, relaxed]
        exclude: ^config/

  # SQL formatting and linting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.0.0a6
    hooks:
      - id: sqlfluff-lint
        additional_dependencies: [sqlfluff-templater-jinja]
        args: [--dialect, postgres]
      - id: sqlfluff-fix
        additional_dependencies: [sqlfluff-templater-jinja]
        args: [--dialect, postgres]

  # Documentation linting
  - repo: https://github.com/pycqa/doc8
    rev: v1.1.1
    hooks:
      - id: doc8
        args: [--max-line-length=88]

# Global configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: "3.0.0"

# CI configuration
ci:
  autofix_commit_msg: "ðŸ¤– [pre-commit.ci] auto fixes from pre-commit hooks"
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "ðŸ¤– [pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false